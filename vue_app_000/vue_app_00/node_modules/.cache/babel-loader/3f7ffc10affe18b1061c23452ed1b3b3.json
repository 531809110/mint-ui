{"remainingRequest":"C:\\Users\\web\\Desktop\\vue_app\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\vue_app\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\vue_app\\vue_app_000\\vue_app_00\\src\\components\\xz\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\vue_app\\vue_app_000\\vue_app_00\\src\\components\\xz\\Cart.vue","mtime":1567249395947},{"path":"C:\\Users\\web\\Desktop\\vue_app\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\vue_app\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\vue_app\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //当前登录用户购物车列表\n      status: true\n    };\n  },\n  created: function created() {\n    //当前组件创建成功回调函数\n    this.loadMore();\n  },\n  methods: {\n    seletItem: function seletItem() {\n      var b = true;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          b = b && item.cb;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (b) {\n        this.status = true;\n      } else {\n        this.status = false;\n      }\n    },\n    delAll: function delAll() {\n      var _this = this;\n\n      var url = \"delAll\";\n      var ids = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.cb) {\n            ids.push(item.id);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (ids.length == 0) {\n        this.$toast(\"请选中商品\");\n        return;\n      }\n\n      ids = ids.join();\n      var obj = {\n        ids: ids\n      };\n      this.$messagebox.confirm(\"是否删除\").then(function (action) {\n        if (action == \"confirm\") {\n          _this.axios.get(url, {\n            params: obj\n          }).then(function (res) {\n            if (res.data.code == -2) {\n              //4:如果服务器返回-2 删除失败\n              _this.$messagebox(\"\", \"删除失败\");\n            } else if (res.data.code == 1) {\n              _this.loadMore();\n            }\n          });\n        }\n      }).catch(function (err) {\n        return;\n      });\n    },\n    del: function del(e) {\n      var _this2 = this;\n\n      var url = \"delItem\";\n      var obj = {\n        id: e.target.dataset.id\n      };\n      this.$messagebox.confirm(\"是否删除\").then(function (action) {\n        if (action == \"confirm\") {\n          _this2.axios.get(url, {\n            params: obj\n          }).then(function (res) {\n            if (res.data.code == -2) {\n              //4:如果服务器返回-2 删除失败\n              _this2.$messagebox(\"\", \"删除失败\");\n            } else if (res.data.code == 1) {\n              _this2.loadMore();\n            }\n          });\n        }\n      }).catch(function (err) {\n        return;\n      });\n    },\n    select: function select(e) {\n      var cb = e.target.checked; //e是事件对象，后面加一个属性target(target就是复选框)，复选框里有个属性checked\n      // console.log(cb)\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var key = _step3.value;\n          key.cb = cb; // console.log(this.list);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      this.$store.commit(\"clear\"); //功能:获取当前用户购物车列表\n      //1:创建url请求服务器地址\n\n      var url = \"carts\"; //2:发送ajax 请求(让服务器程序完成功能)\n\n      this.axios.get(url).then(function (res) {\n        if (res.data.code == -1) {\n          //4:如果服务器返回-1 请登录\n          _this3.$messagebox(\"消息\", \"请登录\").then(function (res) {\n            //回调函数（用户点击确认按钮后调用函数）\n            _this3.$router.push(\"/Login\");\n          });\n        } else {\n          //3:获取服务器返回数据\n          var rows = res.data.data;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var key = _step4.value;\n              key.cb = true;\n\n              _this3.$store.commit(\"increment\");\n            } //  this.$store.commit(\"updateCount(rows.length)\") \n            //  console.log(this.list)\n\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          _this3.list = rows;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"selectAll\" @change=\"select\">全选<input v-model=\"status\" type=\"checkbox\"></div>\r\n    <div class=\"cartItem\" v-for=\"(item,index) in list\" :key=\"index\">\r\n      <div class=\"leftText\">\r\n        <input type=\"checkbox\" v-model=\"item.cb\" @change=\"seletItem\">\r\n        <div><img class=\"imgstyle\" :src=\"'http://127.0.0.1:8080/'+item.img_url\" alt=\"\"></div>\r\n        <div class=\"\"><span>{{item.id}}</span></div>\r\n        <div class=\"\"><span>{{item.lname}}</span></div>\r\n        <div class=\"\"><span>{{item.price}}</span></div>\r\n        <div class=\"\"><span>{{item.count}}</span></div>\r\n      </div>\r\n      <mt-button @click=\"del\" :data-id=\"item.id\">删除</mt-button>\r\n    </div>\r\n    <div @click=\"delAll\">\r\n      <mt-button>删除选中商品</mt-button>\r\n      <h3 style=\"color:red\">购物车数量：{{$store.getters.getCartCount}}</h3>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        list: [], //当前登录用户购物车列表\r\n        status: true\r\n      }\r\n    },\r\n    created() {\r\n      //当前组件创建成功回调函数\r\n      this.loadMore();\r\n    },\r\n    methods: {\r\n      seletItem() {\r\n        var b = true;\r\n        for (var item of this.list) {\r\n          b = b && item.cb;\r\n        }\r\n        if (b) {\r\n          this.status = true\r\n        } else {\r\n          this.status = false\r\n        }\r\n      },\r\n      delAll() {\r\n        var url = \"delAll\";\r\n        var ids = [];\r\n        for (var item of this.list) {\r\n          if (item.cb) {\r\n            ids.push(item.id);\r\n          }\r\n        }\r\n        if(ids.length==0){this.$toast(\"请选中商品\");return;}\r\n        ids = ids.join();\r\n        var obj = {\r\n          ids: ids\r\n        };\r\n        this.$messagebox.confirm(\"是否删除\").then(\r\n          action => {\r\n            if (action == \"confirm\") {\r\n              this.axios.get(url, {\r\n                params: obj\r\n              }).then(res => {\r\n                if (res.data.code == -2) {\r\n                  //4:如果服务器返回-2 删除失败\r\n                  this.$messagebox(\"\", \"删除失败\");\r\n                } else if (res.data.code == 1) {\r\n                  this.loadMore();\r\n                }\r\n              })\r\n            }\r\n          }\r\n        ).catch(err => {\r\n          return;\r\n        })\r\n      },\r\n      del(e) {\r\n        var url = \"delItem\";\r\n        var obj = {\r\n          id: e.target.dataset.id\r\n        };\r\n        this.$messagebox.confirm(\"是否删除\").then(\r\n          action => {\r\n            if (action == \"confirm\") {\r\n              this.axios.get(url, {\r\n                params: obj\r\n              }).then(res => {\r\n                if (res.data.code == -2) {\r\n                  //4:如果服务器返回-2 删除失败\r\n                  this.$messagebox(\"\", \"删除失败\");\r\n                } else if (res.data.code == 1) {\r\n                  this.loadMore();\r\n                }\r\n              })\r\n            }\r\n          }\r\n        ).catch(err => {\r\n          return;\r\n        })\r\n\r\n      },\r\n      select(e) {\r\n        var cb = e.target.checked; //e是事件对象，后面加一个属性target(target就是复选框)，复选框里有个属性checked\r\n        // console.log(cb)\r\n        for (var key of this.list) {\r\n          key.cb = cb;\r\n          // console.log(this.list);\r\n        }\r\n      },\r\n      loadMore() {\r\n        this.$store.commit(\"clear\");\r\n        //功能:获取当前用户购物车列表\r\n        //1:创建url请求服务器地址\r\n        var url = \"carts\";\r\n        //2:发送ajax 请求(让服务器程序完成功能)\r\n        this.axios.get(url).then(res => {\r\n          if (res.data.code == -1) {\r\n            //4:如果服务器返回-1 请登录\r\n            this.$messagebox(\"消息\", \"请登录\").then(res => {\r\n              //回调函数（用户点击确认按钮后调用函数）\r\n              this.$router.push(\"/Login\")\r\n            })\r\n          } else {\r\n            //3:获取服务器返回数据\r\n            var rows = res.data.data;\r\n            for (var key of rows) {\r\n              key.cb = true;\r\n              this.$store.commit(\"increment\");\r\n            }\r\n          //  this.$store.commit(\"updateCount(rows.length)\") \r\n            //  console.log(this.list)\r\n            this.list = rows;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .cartItem {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .leftText {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .imgstyle {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n</style>"],"sourceRoot":"src\\components\\xz"}]}